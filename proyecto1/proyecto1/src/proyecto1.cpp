// This file generated by ngrestcg
// For more information, please visit: https://github.com/loentar/ngrest

#include "proyecto1.h"

//  Esta lista almacenara todos los estudiantes
Lista *listadoEstudiantes = new Lista();

/*
    Metodo declarado en la clase proyecto1, inserta la info de un estudiante a la lista
    recibe una serializacion 'estudianteSerial' que es una serializacion del
    'struct estudiante' definido en el archivo 'nodo.h' y se copia la informacion
    al listadoEstudiantes
*/
std::string proyecto1::insertarEstudiante(estudianteSerial estudiante){
  std::string response = "Estudiante Agregado Exitosamente";

  struct estudiante nuevoEstudiante;

  nuevoEstudiante.carnet      = estudiante.carnet;
  nuevoEstudiante.dpi         = estudiante.dpi;
  nuevoEstudiante.nombres     = estudiante.nombres;
  nuevoEstudiante.apellidos   = estudiante.apellidos;
  nuevoEstudiante.nacimiento  = estudiante.nacimiento;
  nuevoEstudiante.direccion   = estudiante.direccion;
  nuevoEstudiante.creditos    = estudiante.creditos;
  nuevoEstudiante.contrasena  = estudiante.contrasena;

  listadoEstudiantes->otra = listadoEstudiantes->insertar(listadoEstudiantes->raiz,nuevoEstudiante);

  return response;
}

/*
    Metodo declarado en la clase proyecto1, serializa toda la lista de estudiantes, NO podemos enviar
    la lista de estudiantes o la estructura como tal, debemos serializarla
*/

Nodo *pivote = listadoEstudiantes->raiz;
std::list<estudianteSerial> responseL;
  
std::list<estudianteSerial> proyecto1::getEstudiantes(){

  Nodo *p = pivote;
  
  if(pivote != NULL){
    pivote = pivote->izq;
    getEstudiantes();
    estudianteSerial tmp;
    tmp.carnet      = p->estudiante.carnet;
    tmp.dpi         = p->estudiante.dpi;
    tmp.nombres     = p->estudiante.nombres;
    tmp.apellidos   = p->estudiante.apellidos;
    tmp.nacimiento  = p->estudiante.nacimiento;
    tmp.direccion   = p->estudiante.direccion;
    tmp.creditos    = p->estudiante.creditos;
    tmp.contrasena  = p->estudiante.contrasena;
    responseL.push_back(tmp);
    pivote = pivote->der;
    getEstudiantes();
  }
  
    /*tmp.carnet      = 15;
    tmp.dpi         = "12545874";
    tmp.nombres     = "j";
    tmp.apellidos   = "c";
    tmp.nacimiento  = "28/5/9";
    tmp.direccion   = "aqui";
    tmp.creditos    = 150;
    tmp.contrasena  = "jiji";*/
  return responseL;
}

std::string proyecto1::echo(const std::string& text)
{
    return "Hi, " + text;
}

